# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: backend_development
test:
  <<: *default
  database: backend_test
production:
  adapter: postgresql
  host: your-supabase-host
  database: postgres
  username: postgres
  password: your-supabase-password
  port: 5432
  sslmode: require
  primary: &primary_production
    <<: *default
    # Configuração para Supabase usando DATABASE_URL
    url: <%= ENV["DATABASE_URL"] %>
    # SSL obrigatório para Supabase
    sslmode: require
    # Pool de conexões para produção
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    # Timeout de conexão
    connect_timeout: 10
    checkout_timeout: 5
    reaping_frequency: 10
  cache:
    <<: *primary_production
    database: <%= ENV.fetch("DB_NAME") { "postgres" } %>_cache
    migrations_paths: db/cache_migrate
  queue:
    <<: *primary_production
    database: <%= ENV.fetch("DB_NAME") { "postgres" } %>_queue
    migrations_paths: db/queue_migrate
  cable:
    <<: *primary_production
    database: <%= ENV.fetch("DB_NAME") { "postgres" } %>_cable
    migrations_paths: db/cable_migrate
